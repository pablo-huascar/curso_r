---
title: "R para análise de dados em Psicologia"
execute:
  echo: true
author: "Francisco Pablo Huascar Aragão Pinheiro"
institute: <img src="images/ufc_horizontal.png" alt="My Logo" width="250">
format: 
  revealjs:
      theme: simple
progress: true
slide-number: true
logo: images/lappsie.png
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| echo: false
#| include: false
library(tidyverse)
library(palmerpenguins)
```

## Quem sou eu?

::: columns
::: {.column width="40%"}
![](images/logo_pos.png) ![](images/lappsie.png)
:::

::: {.column width="60%"}
<ul>

<li style="font-size:25pt;line-height: 100%; margin-bottom: 10px;">

Psicólogo

</li>

<li style="font-size:25pt;line-height: 100%; margin-bottom: 10px;">

Doutor em Educação

</li>

<li style="font-size:25pt;line-height: 100%; margin-bottom: 10px;">

Professor no campus Sobral da UFC

</li>

<li style="font-size:25pt;line-height: 100%; margin-bottom: 10px;">

Recentemente, um entusiasta do R

</li>

</ul>
:::
:::

## Por que usar o R?

::: incremental
-   Gratuito
-   Pesquisa reprodutível (para outros cientistas e o seu eu do futuro)
-   Flexível
-   Milhares de funções para todo tipo de análise
    -   Novos funções são desenvolvidas o tempo todo ao redor do mundo
:::

# O que eu preciso saber para participar desse minicurso?

## ![](images/logo_windows_11.png)

::: incremental
-   Criar e navegar entre pastas
-   Abrir arquivos
-   Criar arquivos etc.
:::

## Estatística

::: {.fragment .fade-in}
-   Medidas de tendência central e dispersão
:::

::: {.fragment .fade-up}
-   Anova e Teste T
:::

::: {.fragment .fade-left}
-   Correlação
:::

::: {.fragment .fade-right}
-   Regressão
:::

## Eu tenho que aprender uma linguagem de programação para usar o R? {transition="zoom" transition-speed="slow"}

::: columns
::: {.column width="50%"}
![](images/emogi_screaming.png){width="451"}
:::

::: {.column width="50%"}
Sim, mas é como aprender um novo idioma: há desconforto inicial, mas, com a prática, é possível se tornar fluente![^1]
:::
:::

[^1]: E o [tidyverse](https://www.tidyverse.org/ "Tidyverse") facilita muito esse aprendizado

------------------------------------------------------------------------

::: {.fragment .fade-up}
![](images/Rlogo%20(1)-02.png){width="298"}
:::

::: {.fragment .fade-right}
![](images/rstudio-logo-flat-02.png){width="760"}
:::

##  {transition="convex" transition-speed="fast" background-image="images/ferrari.jpg"}

[R]{style="font-size: 150pt;color: white;"}

##  {transition="concave" transition-speed="fast" background-image="images/ferrari_panel.jpg"}

[R Studio]{style="font-size: 100pt;color: white;"}

# Vamos começar!

## Criação de um projeto - Passo 1

![](images/new_project.png){fig-align="left" width="1000"}

## Criação de um projeto - Passo 2

![](images/passo2.png)

## Criação de um projeto - Passo 3

![](images/passo_3.png){fig-align="left"}

## Criação de um projeto - Passo 4

::: columns
::: {.column width="50%"}
![](images/passo_4.png){width="717"}
:::

::: {.column width="50%"}
-   [É muito importante que todos os arquivos do projeto fiquem dentro de uma mesma pasta]{style="font-size:20pt;"}
-   [A pasta "raiz" não pode conter caracteres especiais]{style="font-size:20pt;"}
-   [Dica: crie seus projetos dentro da pasta "documentos" do Windows (ou em uma subpasta "projetos" dentro da pasta "documentos")]{style="font-size:20pt;"}
:::
:::

## E você vai chegar aqui

![](images/passo_final.png)

## Criando o seu primeiro Script

![](images/script_creat_1.png){fig-align="center" width="917"}

## Paineis do R Studio

![](images/paineis_r_studio.png)

## Ajuste dos paineis

![](images/ajuste_paineis.png){width="594"}

## Source Code

::: columns
::: {.column width="30%"}
É onde o código é escrito. Vários tipos de arquivo podem ser utilizados: Scripts, Rmarkdown etc.
:::

::: {.column width="70%"}
![](images/script.png){fig-align="center" width="672"}
:::
:::

## Console

Mostra a saída do que é feito no source code. Também pode ser usado para escrever códigos, mas não é possível salvá-los

![](images/console.png){fig-align="left" width="900"}

## Environment/History

![](images/environment.png){fig-align="left" width="706"}

No environment estão os diversos objetos que são criados pelo código: vetores, dataframes (bancos de dados), tibbles etc.

## File/Plots/Packages/Help

Neste painel são mostrados os arquivos do projeto, os gráficos produzidos, a ajuda e informações sobre os pacotes (instalar, ativar, desativar etc).

![](images/files.png){fig-align="left"}

## File/Plots/Packages/Help

![](images/plots.png)

## R for Data Science

::: columns
::: {.column width="50%"}
Livro base para o mini curso
:::

::: {.column width="50%"}
[![](images/r_for_d_s.jpg){fig-alt="Capa do livro R for Data Science. Uma coruja se destaca na ilustração" fig-align="right" width="412"}](https://r4ds.had.co.nz/)
:::
:::

## R for Data Science

-   Neste [link](https://r4ds.had.co.nz/ "R for Data Science") você pode acessar a primeira edição do livro:

<https://r4ds.had.co.nz/>

-   E [aqui](https://r4ds.hadley.nz/ "R for Data Science") você pode acessar a segunda edição que ainda está sendo finalizada:

<https://r4ds.hadley.nz/>

::: footer
Estes slides tem como base o conteúdo da segunda edição
:::

# 3 Fluxo de trabalho: básico

## 3.1 Noções básicas de codificação

Execução de códigos no Script

- Atalho de declado: ctrl + enter

![](images/rodar_codigo.png)

## Cálculos matemáticos básicos

```{r}
10+10
10/2
10*2+5
10-3
10^2
sqrt(100)
```

## Exercícios

## Criação de objetos com o operador de atribuição \<-

-   O valor de x não é impresso; é apenas armazenado.

-   Para visualizar o valor, execute x no script.

```{r}

x <- 3
x
y <- 10*10
y
```

## Todas as instruções de atribuição têm o mesmo formato

```{r}

nome_do_objeto <- "valor"

nome_do_objeto
```

::: incremental
-   Ao ler esse código, diga: "o nome do objeto obtém valor"
-   Atalho de teclado do R Studio: Alt + "-" (sinal de menos)
:::

## Você pode combinar múltiplos elmentos em um vetor com c() - "concatenar"

```{r}
z <- c(1,2,10,12)
z
```

## Exercícios

## Aritimética básica nos vetores é aplicada a cada elemento do vetor

```{r}
z
z*2
x
x*3
y
y+2
```

## Exercícios

## Dica 1

-   O R diferencia MAIÚSCULAS de minúsculas (case sensitive)

```{r eval = F}
#| code-line-numbers: "|3"
a <- letters

A
```

    Error: object 'A' not found

```{r}
#| code-line-numbers: "|3"
a <- letters

a
```

## Dica 2

-   Cuidado com erros de digitação

```{r message=FALSE, warning=FALSE, eval = F}
#| code-line-numbers: "|3"
data("cars")

carz
```

    Error: object 'carz' not found

# Cars

```{r echo=TRUE}
#| code-line-numbers: "|3"
data("cars")

cars 
```

## 3.2 Comentários

R irá ignorar qualquer texto após \# para essa linha.

```{r}
# Criação de um vetor com os 5 primeiros números pares

pares <- c(2,4,6,8,10)

pares

# Elevando os pares ao quadrado

(pares)^2
```

## Uso dos comentários: Demarcar seções do no código

```{r}
#| code-line-numbers: "|1|5|"
#| output-location: column
#| fig-height: 7
#| fig-dpi: 600  


# Obtenção dos dados

penguins <- penguins

# Gráficos

penguins |> 
  filter(!is.na(sex)) |> 
  ggplot(aes(flipper_length_mm, 
             bill_length_mm, 
             color = sex,
             size = body_mass_g)) +
  geom_point(alpha = 0.5) +
  facet_wrap(~species) 
```

## Como usar os comentários?

::: incremental
-   Use comentários para explicar o porquê do seu código, não o como ou o quê
-   O que e como do seu código são sempre possíveis de descobrir
-   Descobrir por que algo foi feito é muito mais difícil
:::

## Sem Explicações para a equipe

```{r echo=TRUE, message=FALSE, warning=FALSE,fig.height=4}
#| code-line-numbers: "|1|2|3|4|5"
penguins |> 
  filter(island == "Biscoe",!is.na(sex)) |>
  ggplot(aes(flipper_length_mm, bill_length_mm, color = sex, size = body_mass_g)) +
  geom_point(alpha = 0.5) +
  facet_wrap(~species)
```

## Com explicações para a equipe

```{r echo=TRUE, message=FALSE, warning=FALSE,fig.height=4}
#| code-line-numbers: "|1"
# O relatório 3 só precisava dos dados da ilha Biscoe
penguins |> 
  filter(island == "Biscoe",!is.na(sex)) |>
  ggplot(aes(flipper_length_mm, bill_length_mm, color = sex, size = body_mass_g)) +
  geom_point(alpha = 0.5) +
  facet_wrap(~species)
```

## 3.3 O que é um nome?

- Os nomes dos objetos devem começar com uma letra
- Podem conter apenas letras, números, _ e .
- Os nomes de seus objetos devem ser descritivos
- Sugerimos a seguinte convenção:
  - letras minúsculas separadas com _
  
## Exemplos de nomes

- i_use_snake_case
- otherPeopleUseCamelCase
- some.people.use.periods
- And_aFew.People_RENOUNCEconvention

## Dica - auto completar

- Digite ao menos 3 caracteres e use a tecla tab
- O R Studio vai dar opções para escolher
- A função de auto completar é nossa amiga: use sempre!



